#X3D V4.0 utf8
PROFILE Interactive

# Test of Material.shininessTexture and Material.specularTexture,
# and of reusing the same node for both of them.

NavigationInfo { headlight FALSE }

Shape {
  appearance Appearance {
    material Material {
      diffuseTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-tileable.png" }
      normalTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-nm.png" }
      shininess 1
      shininessTexture DEF SpecShininessCombined ImageTexture {
        url "../images/rust_metal_textures/metall001-specular-shininess-combined.png"
      }
      specularTexture USE SpecShininessCombined # both shininess and specular from texture
      specularColor 1 1 1
    }
  }
  geometry Box {
  }
}

Transform {
  translation 0 -2 0
  scale 0.5 0.5 0.5
  children [
    Transform {
      translation -2 0 0
      children Shape {
        appearance Appearance {
          material Material {
            diffuseTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-tileable.png" }
            normalTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-nm.png" }
            shininess 1
            shininessTexture USE SpecShininessCombined # only shininess from texture
            specularColor 1 1 1
          }
        }
        geometry Box {
        }
      }
    }
    Transform {
      translation 2 0 0
      children Shape {
        appearance Appearance {
          material Material {
            diffuseTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-tileable.png" }
            normalTexture ImageTexture { url "../images/rust_metal_textures/metall001-new-nm.png" }
            shininess 1
            specularTexture USE SpecShininessCombined # only specular from texture
            specularColor 1 1 1
          }
        }
        geometry Box {
        }
      }
    }
  ]
}

# animated light source ------------------------------------------------------

DEF MyTimeSensor TimeSensor {
  loop TRUE
  cycleInterval 2
}

DEF MyOrientationInterpolator OrientationInterpolator {
  key [
    0
    0.25
    0.5
    0.75
    1
  ]
  keyValue [
    0 0 1 0,
    0 0 1 1.57, # 0.5 * pi
    0 0 1 3.14, # pi
    0 0 1 4.71, # 1.5 * pi
    0 0 1 0
  ]
}

DEF LightTransform Transform {
  children Transform {
    translation 0.75 0 2
    children [
      PointLight {
        ambientIntensity 1
      }
      # Shape { geometry Sphere { radius 0.1 } } # for debug
    ]
  }
}

ROUTE MyTimeSensor.fraction_changed TO MyOrientationInterpolator.set_fraction
ROUTE MyOrientationInterpolator.value_changed TO LightTransform.rotation
