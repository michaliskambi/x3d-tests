#X3D V4.0 utf8
PROFILE Interchange

Switch {
  children DEF InlinedAvocado Inline {
    url "glTF/Avocado.gltf"
  }
}
IMPORT InlinedAvocado.CastleEncoded_2256_Avocado_d AS AvocadoAppearance
IMPORT InlinedAvocado.Avocado AS AvocadoTransform

# This no longer works, "Avocado" mesh uses the same name as transform.
# The names must be unique in glTF to make such reuse work reliably.
# We used to rename things in CGE, but it was removed -- as it wasn't very reliable
# from user POV (what gets _2 suffix etc.), see discussion at
# https://github.com/castle-engine/castle-engine/blob/master/src/scene/load/README_node_names_at_import.md .
# IMPORT InlinedAvocado.Avocado_2 AS AvocadoMeshes

Transform {
  children [
    Shape {
      appearance USE AvocadoAppearance
      geometry IndexedFaceSet {
        solid FALSE
        coordIndex [ 0 1 2 3 ]
        coord Coordinate {
          point [
            -1 -1 0,
             1 -1 0,
             1  1 0,
            -1  1 0,
          ]
        }
        texCoord TextureCoordinate {
          mapping "TEXCOORD_0"
          point [
            0 0,
            1 0,
            1 1,
            0 1,
          ]
        }
      }
    }
    Transform {
      translation 0 1 1
      children Shape {
        geometry Text {
          string [ "IndexedFaceSet" "reusing Avocado appearance" ]
          fontStyle FontStyle {
            size 0.10
            justify [ "MIDDLE" "END" ]
          }
        }
      }
    }
  ]
}

Transform {
  translation 3 0 0
  children [
    Shape {
      appearance USE AvocadoAppearance
      geometry Sphere {
        texCoord TextureCoordinateGenerator {
          mode "COORD"
          mapping "TEXCOORD_0"
        }
      }
    }
    Transform {
      translation 0 1 1
      children Shape {
        geometry Text {
          string [ "Sphere" "reusing Avocado appearance" ]
          fontStyle FontStyle {
            size 0.10
            justify [ "MIDDLE" "END" ]
          }
        }
      }
    }
  ]
}

Transform {
  translation 6 0 0
  children [
    Transform {
      translation 0 0 0
      scale 10 10 10
      children USE AvocadoTransform
    }
    Transform {
      translation 0 -1 0
      scale 10 10 10
      children USE AvocadoTransform
    }
    Transform {
      translation 0 -2 0
      scale 10 10 10
      children USE AvocadoTransform
    }
    Transform {
      translation 0 1 1
      children Shape {
        geometry Text {
          string [ "Reusing Avocado transform" ]
          fontStyle FontStyle {
            size 0.15
            justify "MIDDLE"
          }
        }
      }
    }
  ]
}

# This no longer works, see above comments at AvocadoMeshes
# Transform {
#   translation 9 0 0
#   children [
#     Transform {
#       translation 0 0 0
#       scale 10 10 10
#       children USE AvocadoMeshes
#     }
#     Transform {
#       translation 0 -1 0
#       scale 10 10 10
#       children USE AvocadoMeshes
#     }
#     Transform {
#       translation 0 -2 0
#       scale 10 10 10
#       children USE AvocadoMeshes
#     }
#     Transform {
#       translation 0 1 1
#       children Shape {
#         geometry Text {
#           string [ "Reusing Avocado meshes" ]
#           fontStyle FontStyle {
#             size 0.15
#             justify "MIDDLE"
#           }
#         }
#       }
#     }
#   ]
# }
